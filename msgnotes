Messages as of 2/16/91:

Repeated subtrings in ted.8, tedkey.8, tedsrch.8 [and teddos.8 and tedmem.8]:

'not' /3	2 + 3
'file' 1/2	4 + 2
'buffer' /3	8 + 3
'macro' 1/2	6 + 2
'full' 4/	7
'mark' /2	1 + 2
'error' 1/2	7 + 2		<- this occurs mainly in "$"-type strings
'sav' 2/	0
'record' 2/	3
'set' 2/	0
'ing' /2	0 + 2
'ed.' 3/	2
	       --  --
	       40 +16  = 56 bytes saved

Gross savings:

  a) Using high-bit-for-space would save the above 16, plus 19.
	35 bytes total
  b) Using indexing of substrings:
	40 bytes (+ cheaper to be more verbose...)
  c) Using indexes in "display message" function calls:
	10 (?) bytes
  d) taking arguments as immmediate data following the call instruction
	10 (?) bytes


banner:         db 'TED v0.99, copyright 1992 Brian Kelley ',0
errprefix:      db 'ted: $'
msg1:           db 'read $7$'
msg2:           db '%2too big$'
msg3:           db 'cmd line $7$'
msg4:           db '%2$8ed.', 0
msg5:           db '%7$8%11$2!',0
msg6:           db 'Text %3$5!',0
msg7:           db 'Cut %3$5!',0
msg8:           db '%6$10.',0
msg9:           db '%6%1$10!',0
msg10:          db '%1enough memory.',0
mxfullmsg:      db      '%4%3$5.',0
mxstartmsg:     db      '$9%11$4...',0
mxendmsg:       db      '%4$9ed.',0
mxdepthmsg:     db      'LOOP... '
mxabortmsg:     db      'Aborted.',0
srchrmsg:       db      'R-'
srchmsg:        db      'Search:',0
srchfullmsg:    db      '($5):',0
srcherrmsg:     db      '%1found:',0
srcheditmsg:    db      'Press Ctrl-S when done...', 0
srchrplcmsg:    db      'Replace? (Y,N,A,Q) :',0
